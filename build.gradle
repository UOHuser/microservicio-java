plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
  id "org.sonarqube" version "4.2.1.3168"
  id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

jacocoTestReport {
  dependsOn test
    reports {
        xml.enabled true
        html.enabled true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.85
            }
        }
    }
}

configurations {
    runtimeClasspath {
        extendsFrom implementation
        canBeResolved = true
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.example.testingweb.TestingWebApplication' // Reemplaza 'com.example.MainClass' con la clase principal de tu proyecto
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

sonar {
  properties {
    property "sonar.projectKey", "UOHuser_microservicio-java"
    property "sonar.organization", "devopslabuoh"
    property "sonar.host.url", "https://sonarcloud.io/"
    property "sonar.projectName", "microservicio-java"
    property "sonar.jacoco.reportPaths", "build/reports/jacoco/jacoco.xml"
  }
}

test {
	useJUnitPlatform()
}
